name: CI

on:
  push:
    branches:
      - main
      - staging
      - trying
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  ci: # this is likely not needed, but I'm not 100% sure
    name: CI
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: exit 0

  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: moonrepo/setup-rust@v0
        with:
          channel: nightly
          components: rustfmt, clippy

      - name: Check rustfmt
        run: cargo fmt --check

      - name: Check clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Check docs
        env:
          RUSTDOCFLAGS: -D warnings
        run: cargo doc --all-features

  test:
    name: Test (${{ matrix.os.name }}, Rust ${{ matrix.rust.name }}, Java ${{ matrix.java }})
    needs:
      - checks
    strategy:
      fail-fast: false
      matrix:
        os:
          - { name: win, version: windows-latest }
          - { name: linux, version: ubuntu-latest }
        rust:
          - { name: MSRV, version: 1.66.1 }
          - { name: stable, version: stable }
          - { name: nightly, version: nightly }
        java:
          - 8
          - 11
          - 17
    runs-on: ${{ matrix.os.version }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - uses: moonrepo/setup-rust@v0
        with:
          channel: ${{ matrix.rust.version }}

      - name: Build
        run: cargo build --all-features --all-targets

      - name: Doctests
        run: cargo test --all-features --doc
        timeout-minutes: 5

      - name: Test
        run: cargo test --all-features --all-targets
        timeout-minutes: 5
